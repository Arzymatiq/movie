{"version":3,"file":"static/js/630.6f7cacb7.chunk.js","mappings":"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","sources":["webpack://task4/./src/components/home/style/seriesDetails.module.scss?9984","components/home/series/seriesDetails/StarItem.tsx","components/home/series/seriesDetails/SeriesDetails.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"header\":\"seriesDetails_header__kir0+\",\"header_center\":\"seriesDetails_header_center__5z4aZ\",\"header_info\":\"seriesDetails_header_info__D-Nsm\",\"episode\":\"seriesDetails_episode__hrX7q\",\"episode_center\":\"seriesDetails_episode_center__uq+Wm\",\"episodes_list\":\"seriesDetails_episodes_list__6bG35\",\"episodes_item\":\"seriesDetails_episodes_item__yEibF\",\"episodes_item_main\":\"seriesDetails_episodes_item_main__Z02Sw\",\"episode_item_info\":\"seriesDetails_episode_item_info__3zOq3\",\"people\":\"seriesDetails_people__+OWla\",\"people_list\":\"seriesDetails_people_list__czoOK\",\"stars_block\":\"seriesDetails_stars_block__odcL-\",\"start_info\":\"seriesDetails_start_info__hzdhE\"};","import React from \"react\";\r\nimport { Iguest_stars } from \"../../../../store/types/types\";\r\nimport { MaxLength } from \"../../../../helpers/function\";\r\nimport style from \"../../style/seriesDetails.module.scss\";\r\n\r\ninterface StarItemProps {\r\n  stars: Iguest_stars[];\r\n}\r\n\r\nconst StarItem = ({ stars }: StarItemProps) => {\r\n  const handleStarClick = (starId: number) => {\r\n    console.log(`Star clicked: ${starId}`);\r\n    window.open(`https://example.com/star/${starId}`, \"_blank\");\r\n  };\r\n\r\n  return (\r\n    <ul className={style.people_list}>\r\n      {stars.slice(0, 20).map((star) => (\r\n        <li\r\n          className={style.stars_block}\r\n          key={star.id}\r\n          onClick={() => handleStarClick(star.id)}\r\n        >\r\n          <img\r\n            src={`https://image.tmdb.org/t/p/w500/${star.profile_path}`}\r\n            alt={star.name}\r\n            onError={(e) => {\r\n              e.currentTarget.onerror = null;\r\n              e.currentTarget.src =\r\n                \"https://icons.veryicon.com/png/o/miscellaneous/bitisland-world/person-18.png\";\r\n            }}\r\n          />\r\n          <div className={style.start_info}>\r\n            <p>{star.name}</p>\r\n            <p> {MaxLength(String(star.character), 20)}</p>\r\n          </div>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default StarItem;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { useAppDispatch, useAppSelector } from \"../../../../store/store\";\r\nimport { getOneSeriesDetails } from \"../../../../store/posts/postAction\";\r\nimport { clearPost } from \"../../../../store/posts/postSlice\";\r\nimport StarItem from \"./StarItem\";\r\nimport style from \"../../style/seriesDetails.module.scss\";\r\n\r\nconst SeriesDetails = () => {\r\n    const { id, season_number } = useParams<{\r\n        id: string;\r\n        season_number: string;\r\n    }>();\r\n    const dispatch = useAppDispatch();\r\n    const navigate = useNavigate();\r\n    const { oneSeriesDetails, loading, error } = useAppSelector(\r\n        (state) => state.posts\r\n    );\r\n    const language = localStorage.getItem(\"language\") || \"en-US\";\r\n\r\n    const [openEpisodes, setOpenEpisodes] = useState<Record<number, boolean>>(\r\n        {}\r\n    );\r\n\r\n    const formatRuntime = (minutes: number) => {\r\n        const hours = Math.floor(minutes / 60);\r\n        const mins = minutes % 60;\r\n        if (hours == 0) return `${mins} m`;\r\n        return `${hours} h ${mins} m`;\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (id && season_number) {\r\n            dispatch(\r\n                getOneSeriesDetails({\r\n                    id,\r\n                    season_number: Number(season_number),\r\n                    language,\r\n                })\r\n            );\r\n        }\r\n        return () => {\r\n            dispatch(clearPost());\r\n        };\r\n    }, [dispatch, id, season_number, language]);\r\n\r\n    const handleBack = () => {\r\n        if (window.history.length > 1) {\r\n            navigate(-1); // Вернуться назад\r\n        } else {\r\n            navigate(`/series/${id}/${season_number}?language=${language}`);\r\n        }\r\n    };\r\n\r\n    const toggleEpisode = (episodeId: number) => {\r\n        setOpenEpisodes((prev) => ({\r\n            ...prev,\r\n            [episodeId]: !prev[episodeId],\r\n        }));\r\n    };\r\n\r\n    if (loading) return <p>Loading...</p>;\r\n    if (error) return <p>Error: {error}</p>;\r\n    if (!oneSeriesDetails) return <p>No data available</p>;\r\n\r\n    return (\r\n        <>\r\n            <button className={style.backButton} onClick={handleBack}>\r\n                Back\r\n            </button>\r\n            <div className={style.header}>\r\n                <div className={style.header_center}>\r\n                    <img\r\n                        src={`https://image.tmdb.org/t/p/w500/${oneSeriesDetails?.poster_path}`}\r\n                        alt=\"Poster\"\r\n                        width={100}\r\n                    />\r\n                    <div className={style.header_info}>\r\n                        <p>\r\n                            {oneSeriesDetails?.name}{\" \"}\r\n                            {`(${oneSeriesDetails?.air_date})`}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={style.episode}>\r\n                <div className={style.episode_center}>\r\n                    <h2>Episodes ({oneSeriesDetails?.episodes.length})</h2>\r\n                    <ul className={style.episodes_list}>\r\n                        {oneSeriesDetails?.episodes.map((item) => (\r\n                            <li\r\n                                key={item.id}\r\n                                className={`${style.episodes_item} ${\r\n                                    openEpisodes[item.id] ? style.expanded : \"\"\r\n                                }`}>\r\n                                <div className={style.episodes_item_main}>\r\n                                    <img\r\n                                        src={`https://image.tmdb.org/t/p/w500/${item.still_path}`}\r\n                                        alt=\"Episode still\"\r\n                                    />\r\n                                    <div className={style.episode_item_info}>\r\n                                        <h3>\r\n                                            {item.name}{\" \"}\r\n                                            <span>\r\n                                                {`(${item.air_date || \"N/A\"})`}\r\n                                            </span>\r\n                                        </h3>\r\n                                        <p>\r\n                                            {item.overview ||\r\n                                                \"No overview available.\"}\r\n                                        </p>\r\n                                        <p>\r\n                                            {item.runtime\r\n                                                ? formatRuntime(item.runtime)\r\n                                                : \"Runtime not available\"}\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                                {item.guest_stars &&\r\n                                    item.guest_stars.length > 0 && (\r\n                                        <div className={style.people}>\r\n                                            <h3\r\n                                                onClick={() =>\r\n                                                    toggleEpisode(item.id)\r\n                                                }\r\n                                                className={style.toggleStars}>\r\n                                                Stars\r\n                                            </h3>\r\n                                            {openEpisodes[item.id] && (\r\n                                                <StarItem\r\n                                                    stars={item.guest_stars}\r\n                                                />\r\n                                            )}\r\n                                        </div>\r\n                                    )}\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SeriesDetails;\r\n"],"names":["_ref","stars","_jsx","className","style","people_list","children","slice","map","star","_jsxs","stars_block","onClick","handleStarClick","starId","id","console","log","concat","window","open","src","profile_path","alt","name","onError","e","currentTarget","onerror","start_info","MaxLength","String","character","SeriesDetails","season_number","useParams","dispatch","useAppDispatch","navigate","useNavigate","oneSeriesDetails","loading","error","useAppSelector","state","posts","language","localStorage","getItem","openEpisodes","setOpenEpisodes","useState","formatRuntime","minutes","hours","Math","floor","mins","useEffect","getOneSeriesDetails","Number","clearPost","_Fragment","backButton","handleBack","history","length","header","header_center","poster_path","width","header_info","air_date","episode","episode_center","episodes","episodes_list","item","episodes_item","expanded","episodes_item_main","still_path","episode_item_info","overview","runtime","guest_stars","people","toggleEpisode","episodeId","prev","_objectSpread","toggleStars","StarItem"],"sourceRoot":""}