{"version":3,"file":"static/js/884.cd8e64e8.chunk.js","mappings":"oPASA,MA8GA,EA9GqBA,KACnB,MAAM,SACJC,EAAQ,aACRC,EACAC,WAAW,OAAEC,KACXC,EAAAA,EAAAA,MAEEC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OACX,EAAEC,IAAMC,EAAAA,EAAAA,MAgBd,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,EAAMC,UAAUC,UAC9BJ,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,EAAMG,gBAAgBD,UACpCE,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACC,SAAUlB,GAjBLmB,UACf,IACE,MAAMC,QAAehB,GAASiB,EAAAA,EAAAA,GAAaC,IAEvCD,EAAAA,EAAaE,UAAUC,MAAMJ,GAC/Bd,EAAS,UAETmB,MAAML,EAAOM,SAAW,2GAE5B,CAAE,MAAOC,GACPC,QAAQC,MAAM,2GAAuBF,EACvC,KAM2Cb,SAAA,EACrCJ,EAAAA,EAAAA,KAAA,MAAAI,SAAKN,EAAE,gBACPE,EAAAA,EAAAA,KAACO,EAAAA,EAAKa,KAAI,CACRC,KAAK,WACLC,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS1B,EAAE,aAC7B,CAAE2B,IAAK,GAAID,QAAS1B,EAAE,YACtB,CAAE4B,IAAK,EAAGF,QAAS1B,EAAE,cACrBM,UAEFJ,EAAAA,EAAAA,KAAC2B,EAAAA,GAAKC,EAAAA,EAAAA,GAAA,CACJC,YAAY,YACRxC,EAAS,WAAY,CACvBkC,SAAUzB,EAAE,YACZgC,UAAW,CACTC,MAAO,GACPP,QAAS1B,EAAE,YAEbkC,UAAW,CACTD,MAAO,EACPP,QAAS1B,EAAE,oBAKnBE,EAAAA,EAAAA,KAACO,EAAAA,EAAKa,KAAI,CACRC,KAAK,QACLC,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS1B,EAAE,aAC7B,CAAE2B,IAAK,GAAID,QAAS1B,EAAE,YACtB,CAAE4B,IAAK,EAAGF,QAAS1B,EAAE,cACrBM,UAEFJ,EAAAA,EAAAA,KAAC2B,EAAAA,GAAKC,EAAAA,EAAAA,GAAA,CACJC,YAAY,SACRxC,EAAS,QAAS,CACpBkC,SAAUzB,EAAE,YACZgC,UAAW,CACTC,MAAO,GACPP,QAAS1B,EAAE,YAEbkC,UAAW,CACTD,MAAO,EACPP,QAAS1B,EAAE,oBAKnBE,EAAAA,EAAAA,KAACO,EAAAA,EAAKa,KAAI,CACRC,KAAK,WACLC,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS1B,EAAE,aAC7B,CAAE2B,IAAK,GAAID,QAAS1B,EAAE,YACtB,CAAE4B,IAAK,EAAGF,QAAS1B,EAAE,cACrBM,UAEFJ,EAAAA,EAAAA,KAAC2B,EAAAA,EAAMM,UAAQL,EAAAA,EAAAA,GAAA,CACbC,YAAY,YACRxC,EAAS,WAAY,CACvBkC,SAAUzB,EAAE,YACZgC,UAAW,CACTC,MAAO,GACPP,QAAS1B,EAAE,YAEbkC,UAAW,CACTD,MAAO,EACPP,QAAS1B,EAAE,oBAKnBE,EAAAA,EAAAA,KAACO,EAAAA,EAAKa,KAAI,CAAAhB,UACRJ,EAAAA,EAAAA,KAACkC,EAAAA,GAAM,CAACC,KAAK,UAAUC,SAAS,SAAQhC,SACrCN,EAAE,uBAKP,C,kCClHV,SAAgB,UAAY,2BAA2B,gBAAkB,iCAAiC,SAAW,0B","sources":["components/user/RegisterForm.tsx","webpack://task4/./src/components/user/logForm.module.scss?a899"],"sourcesContent":["import React from \"react\";\r\nimport style from \"./logForm.module.scss\";\r\nimport { registerFunc } from \"../../store/user/userAction\";\r\nimport { useAppDispatch } from \"../../store/store\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Form, Input, Button } from \"antd\";\r\n\r\nconst RegisterForm = () => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors }\r\n  } = useForm();\r\n\r\n  const dispatch = useAppDispatch();\r\n  const navigate = useNavigate();\r\n  const { t } = useTranslation();\r\n\r\n  const onSubmit = async (data: any) => {\r\n    try {\r\n      const action = await dispatch(registerFunc(data));\r\n\r\n      if (registerFunc.fulfilled.match(action)) {\r\n        navigate(\"/login\");\r\n      } else {\r\n        alert(action.payload || \"Ошибка регистрации.\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Ошибка регистрации:\", err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={style.authInput}>\r\n      <div className={style.authInputCenter}>\r\n        <Form onFinish={handleSubmit(onSubmit)}>\r\n          <h2>{t(\"regbutton\")}</h2>\r\n          <Form.Item\r\n            name=\"fullname\"\r\n            rules={[\r\n              { required: true, message: t(\"required\") },\r\n              { max: 20, message: t(\"message\") },\r\n              { min: 4, message: t(\"message1\") }\r\n            ]}\r\n          >\r\n            <Input\r\n              placeholder=\"fullname\"\r\n              {...register(\"fullname\", {\r\n                required: t(\"required\"),\r\n                maxLength: {\r\n                  value: 20,\r\n                  message: t(\"message\")\r\n                },\r\n                minLength: {\r\n                  value: 4,\r\n                  message: t(\"message1\")\r\n                }\r\n              })}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"login\"\r\n            rules={[\r\n              { required: true, message: t(\"required\") },\r\n              { max: 20, message: t(\"message\") },\r\n              { min: 4, message: t(\"message1\") }\r\n            ]}\r\n          >\r\n            <Input\r\n              placeholder=\"login\"\r\n              {...register(\"login\", {\r\n                required: t(\"required\"),\r\n                maxLength: {\r\n                  value: 20,\r\n                  message: t(\"message\")\r\n                },\r\n                minLength: {\r\n                  value: 4,\r\n                  message: t(\"message1\")\r\n                }\r\n              })}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"password\"\r\n            rules={[\r\n              { required: true, message: t(\"required\") },\r\n              { max: 20, message: t(\"message\") },\r\n              { min: 4, message: t(\"message1\") }\r\n            ]}\r\n          >\r\n            <Input.Password\r\n              placeholder=\"password\"\r\n              {...register(\"password\", {\r\n                required: t(\"required\"),\r\n                maxLength: {\r\n                  value: 20,\r\n                  message: t(\"message\")\r\n                },\r\n                minLength: {\r\n                  value: 4,\r\n                  message: t(\"message1\")\r\n                }\r\n              })}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              {t(\"regbutton\")}\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"authInput\":\"logForm_authInput__Gxsw6\",\"authInputCenter\":\"logForm_authInputCenter__osKa4\",\"register\":\"logForm_register__H8prq\"};"],"names":["RegisterForm","register","handleSubmit","formState","errors","useForm","dispatch","useAppDispatch","navigate","useNavigate","t","useTranslation","_jsx","className","style","authInput","children","authInputCenter","_jsxs","Form","onFinish","async","action","registerFunc","data","fulfilled","match","alert","payload","err","console","error","Item","name","rules","required","message","max","min","Input","_objectSpread","placeholder","maxLength","value","minLength","Password","Button","type","htmlType"],"sourceRoot":""}