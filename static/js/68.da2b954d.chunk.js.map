{"version":3,"file":"static/js/68.da2b954d.chunk.js","mappings":"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","sources":["webpack://task4/./src/components/home/style/OneSeries.module.scss?2903","components/home/series/OneSeries.tsx","webpack://task4/./src/components/home/style/OnePost.module.scss?bda0"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"network\":\"OneSeries_network__UfE7t\",\"networks\":\"OneSeries_networks__fKqEy\",\"networks_logo\":\"OneSeries_networks_logo__-p2VL\",\"seasons\":\"OneSeries_seasons__6PRGN\",\"seasons_list\":\"OneSeries_seasons_list__oLHTX\",\"seasons_list_center\":\"OneSeries_seasons_list_center__olu8c\",\"seasons_item\":\"OneSeries_seasons_item__3fNR3\",\"seasons_info\":\"OneSeries_seasons_info__w0H6M\",\"name\":\"OneSeries_name__ccqCd\"};","import React, { useEffect } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { useAppDispatch, useAppSelector } from \"../../../store/store\";\r\nimport { getOneSeries } from \"../../../store/posts/postAction\";\r\nimport styles from \"../style/OneSeries.module.scss\";\r\nimport style from \"../style/OnePost.module.scss\";\r\nimport { clearPost } from \"../../../store/posts/postSlice\";\r\nimport { Rating, Skeleton } from \"@mui/material\";\r\nimport { MaxLength } from \"../../../helpers/function\";\r\n\r\nconst OneSeries: React.FC = () => {\r\n    const { id } = useParams<{ id: string }>();\r\n    const dispatch = useAppDispatch();\r\n    const { oneSeries, loading, error } = useAppSelector(\r\n        (state) => state.posts\r\n    );\r\n    const navigate = useNavigate();\r\n\r\n    const language = localStorage.getItem(\"language\") || \"en-US\";\r\n    console.log(language);\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            dispatch(getOneSeries({ id, language }));\r\n            return () => {\r\n                dispatch(clearPost());\r\n            };\r\n        }\r\n    }, [dispatch, id, language]);\r\n\r\n    const checkSeasonNumber = (season: any) => {\r\n        if (\r\n            season?.name.toLowerCase().split(\" \").includes(\"season\") ||\r\n            season?.name.toLowerCase().split(\" \").includes(\"сезон\")\r\n        ) {\r\n            return <h4>{season.name}</h4>;\r\n        } else {\r\n            return (\r\n                <>\r\n                    <h4>season {season.season_number}</h4>\r\n                    <h4>{season.name}</h4>\r\n                </>\r\n            );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {loading ? (\r\n                <div className={style.movieDetail}>\r\n                    <div className={style.info}>\r\n                        <Skeleton\r\n                            className={style.backdrop}\r\n                            variant=\"rectangular\"\r\n                        />\r\n                        <div className={style.main_info}>\r\n                            <div className={style.main_info_center}>\r\n                                <Skeleton\r\n                                    className={style.poster_skeleton}\r\n                                    variant=\"rectangular\"\r\n                                />\r\n                                <div className={style.textbox}>\r\n                                    <Skeleton\r\n                                        className={style.skeleton}\r\n                                        animation=\"wave\"\r\n                                        width={400}\r\n                                    />\r\n                                    <Skeleton\r\n                                        className={style.skeleton}\r\n                                        animation=\"wave\"\r\n                                        width={400}\r\n                                    />\r\n                                    <br />\r\n                                    <Skeleton animation=\"wave\" width={400} />\r\n                                    <br />\r\n                                    <p>\r\n                                        <Skeleton\r\n                                            className={style.skeleton}\r\n                                            animation=\"wave\"\r\n                                            width={400}\r\n                                        />\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ) : error ? (\r\n                <div>\r\n                    <h2>Something went wrong</h2>\r\n                    <div>\r\n                        No series found. Please check back later or try\r\n                        searching for another series.\r\n                    </div>\r\n                </div>\r\n            ) : !oneSeries ? (\r\n                <div>No series found</div>\r\n            ) : (\r\n                <>\r\n                    <div className={style.movieDetail}>\r\n                        <div className={style.info}>\r\n                            <img\r\n                                className={style.backdrop}\r\n                                src={`https://image.tmdb.org/t/p/w500/${oneSeries.backdrop_path}`}\r\n                                alt={oneSeries.name}\r\n                            />\r\n                            <div className={style.main_info}>\r\n                                <div className={style.main_info_center}>\r\n                                    <img\r\n                                        className={style.poster}\r\n                                        src={`https://image.tmdb.org/t/p/original/${oneSeries.poster_path}`}\r\n                                        alt=\"\"\r\n                                    />\r\n                                    <div className={style.textbox}>\r\n                                        <h2>\r\n                                            {`${oneSeries.name} (${oneSeries?.first_air_date})`}\r\n                                        </h2>\r\n                                        <p>{oneSeries.original_name}</p>\r\n                                        <br />\r\n                                        <p>{oneSeries.overview}</p>\r\n                                        <br />\r\n                                        <p>\r\n                                            Grade count: {oneSeries.vote_count}\r\n                                        </p>\r\n                                        <p>Rating: {oneSeries.vote_average}</p>\r\n                                        <Rating\r\n                                            name=\"half-rating-read\"\r\n                                            value={oneSeries.vote_average / 2}\r\n                                            precision={0.2}\r\n                                            max={5}\r\n                                            sx={{\r\n                                                \"& .MuiRating-icon\": {\r\n                                                    color: \"orange\",\r\n                                                    backgroundColor:\r\n                                                        \"transparent\",\r\n                                                },\r\n                                            }}\r\n                                            readOnly\r\n                                        />\r\n                                        <br />\r\n                                        <p>\r\n                                            {oneSeries?.created_by\r\n                                                .map((item) =>\r\n                                                    item.name ? (\r\n                                                        <span key={item.id}>\r\n                                                            {`create by ${item?.name} (${item?.original_name})`}\r\n                                                        </span>\r\n                                                    ) : null\r\n                                                )\r\n                                                .reduce(\r\n                                                    (prev, curr) => prev,\r\n                                                    \", \"\r\n                                                )}\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={styles.network}>\r\n                        <h2>Networks</h2>\r\n                        <div className={styles.networks}>\r\n                            {oneSeries?.networks?.map((network) => (\r\n                                <div\r\n                                    className={styles.networks}\r\n                                    key={network.id}>\r\n                                    <img\r\n                                        className={styles.networks_logo}\r\n                                        src={`https://image.tmdb.org/t/p/original${network.logo_path}`}\r\n                                        alt={network.name}\r\n                                    />\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                    <div className={styles.seasons}>\r\n                        <h2>Seasons</h2>\r\n                        <div className={styles.seasons_list}>\r\n                            <div className={styles.seasons_list_center}>\r\n                                {oneSeries?.seasons?.map((season) => (\r\n                                    <div\r\n                                        className={styles.seasons_item}\r\n                                        key={season.id}\r\n                                        onClick={() =>\r\n                                            navigate(`${season.season_number}`)\r\n                                        }>\r\n                                        <img\r\n                                            className={styles.seasons_poster}\r\n                                            src={`https://image.tmdb.org/t/p/original${season.poster_path}`}\r\n                                            alt={season.name}\r\n                                        />\r\n                                        <div className={styles.seasons_info}>\r\n                                            {checkSeasonNumber(season)}\r\n                                            <p>\r\n                                                {MaxLength(season.overview, 30)}\r\n                                            </p>\r\n                                            <p>Air date: {season.air_date}</p>\r\n                                            <p>\r\n                                                Episode count:{\" \"}\r\n                                                {season.episode_count}\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default OneSeries;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"movieDetail\":\"OnePost_movieDetail__Slg47\",\"info\":\"OnePost_info__I45Gv\",\"backdrop\":\"OnePost_backdrop__ktJCt\",\"main_info\":\"OnePost_main_info__R60jY\",\"main_info_center\":\"OnePost_main_info_center__-SoWm\",\"poster\":\"OnePost_poster__vNedh\",\"poster_skeleton\":\"OnePost_poster_skeleton__jsxiu\",\"textbox\":\"OnePost_textbox__thdnH\",\"skeleton\":\"OnePost_skeleton__+LhAx\"};"],"names":["OneSeries","_oneSeries$networks","_oneSeries$seasons","id","useParams","dispatch","useAppDispatch","oneSeries","loading","error","useAppSelector","state","posts","navigate","useNavigate","language","localStorage","getItem","console","log","useEffect","getOneSeries","clearPost","checkSeasonNumber","season","name","toLowerCase","split","includes","_jsx","children","_jsxs","_Fragment","season_number","className","style","movieDetail","info","Skeleton","backdrop","variant","main_info","main_info_center","poster_skeleton","textbox","skeleton","animation","width","src","concat","backdrop_path","alt","poster","poster_path","first_air_date","original_name","overview","vote_count","vote_average","Rating","value","precision","max","sx","color","backgroundColor","readOnly","created_by","map","item","reduce","prev","curr","styles","network","networks","networks_logo","logo_path","seasons","seasons_list","seasons_list_center","seasons_item","onClick","seasons_poster","seasons_info","MaxLength","air_date","episode_count"],"sourceRoot":""}